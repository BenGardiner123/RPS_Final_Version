// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RPS_Final_Version.Models;

#nullable disable

namespace RPS_Final_Version.Migrations
{
    [DbContext(typeof(rock_paper_scissorsContext))]
    partial class rock_paper_scissorsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RPS_Final_Version.Models.Choice", b =>
                {
                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DESCRIPTION");

                    b.HasKey("Description")
                        .HasName("PK__CHOICE__4193D92F9E9FC0A0");

                    b.ToTable("CHOICE", (string)null);
                });

            modelBuilder.Entity("RPS_Final_Version.Models.Game", b =>
                {
                    b.Property<int>("Gameid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GAMEID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Gameid"), 1L, 1);

                    b.Property<DateTime>("Datetimeended")
                        .HasColumnType("datetime")
                        .HasColumnName("DATETIMEENDED");

                    b.Property<DateTime>("Datetimestarted")
                        .HasColumnType("datetime")
                        .HasColumnName("DATETIMESTARTED");

                    b.Property<string>("Gamecode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("GAMECODE");

                    b.Property<string>("GamerWinner")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("GAMER_WINNER");

                    b.Property<string>("PlayerOne")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PLAYER_ONE");

                    b.Property<string>("PlayerTwo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PLAYER_TWO");

                    b.Property<int>("Roundlimit")
                        .HasColumnType("int")
                        .HasColumnName("ROUNDLIMIT");

                    b.HasKey("Gameid");

                    b.HasIndex("PlayerOne");

                    b.HasIndex("PlayerTwo");

                    b.ToTable("GAME", (string)null);
                });

            modelBuilder.Entity("RPS_Final_Version.Models.Player", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("USERNAME");

                    b.HasKey("Username")
                        .HasName("PK__PLAYER__B15BE12F8026C15E");

                    b.ToTable("PLAYER", (string)null);
                });

            modelBuilder.Entity("RPS_Final_Version.Models.Round", b =>
                {
                    b.Property<int>("Roundnumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ROUNDNUMBER");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Roundnumber"), 1L, 1);

                    b.Property<int>("Gameid")
                        .HasColumnType("int")
                        .HasColumnName("GAMEID");

                    b.Property<string>("PlayerOneChoice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PLAYER_ONE_CHOICE");

                    b.Property<string>("PlayerTwoChoice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PLAYER_TWO_CHOICE");

                    b.HasKey("Roundnumber", "Gameid", "PlayerOneChoice", "PlayerTwoChoice")
                        .HasName("PK__ROUND__C3DB5F0D1F7691B7");

                    b.HasIndex("Gameid");

                    b.HasIndex("PlayerOneChoice");

                    b.HasIndex("PlayerTwoChoice");

                    b.ToTable("ROUND", (string)null);
                });

            modelBuilder.Entity("RPS_Final_Version.Models.Game", b =>
                {
                    b.HasOne("RPS_Final_Version.Models.Player", "PlayerOneNavigation")
                        .WithMany("GamePlayerOneNavigations")
                        .HasForeignKey("PlayerOne")
                        .HasConstraintName("FK__GAME__PLAYER_ONE__5441852A");

                    b.HasOne("RPS_Final_Version.Models.Player", "PlayerTwoNavigation")
                        .WithMany("GamePlayerTwoNavigations")
                        .HasForeignKey("PlayerTwo")
                        .HasConstraintName("FK__GAME__PLAYER_TWO__5535A963");

                    b.Navigation("PlayerOneNavigation");

                    b.Navigation("PlayerTwoNavigation");
                });

            modelBuilder.Entity("RPS_Final_Version.Models.Round", b =>
                {
                    b.HasOne("RPS_Final_Version.Models.Game", "Game")
                        .WithMany("Rounds")
                        .HasForeignKey("Gameid")
                        .IsRequired()
                        .HasConstraintName("FK__ROUND__GAMEID__5CD6CB2B");

                    b.HasOne("RPS_Final_Version.Models.Choice", "PlayerOneChoiceNavigation")
                        .WithMany("RoundPlayerOneChoiceNavigations")
                        .HasForeignKey("PlayerOneChoice")
                        .IsRequired()
                        .HasConstraintName("FK__ROUND__PLAYER_ON__5DCAEF64");

                    b.HasOne("RPS_Final_Version.Models.Choice", "PlayerTwoChoiceNavigation")
                        .WithMany("RoundPlayerTwoChoiceNavigations")
                        .HasForeignKey("PlayerTwoChoice")
                        .IsRequired()
                        .HasConstraintName("FK__ROUND__PLAYER_TW__5EBF139D");

                    b.Navigation("Game");

                    b.Navigation("PlayerOneChoiceNavigation");

                    b.Navigation("PlayerTwoChoiceNavigation");
                });

            modelBuilder.Entity("RPS_Final_Version.Models.Choice", b =>
                {
                    b.Navigation("RoundPlayerOneChoiceNavigations");

                    b.Navigation("RoundPlayerTwoChoiceNavigations");
                });

            modelBuilder.Entity("RPS_Final_Version.Models.Game", b =>
                {
                    b.Navigation("Rounds");
                });

            modelBuilder.Entity("RPS_Final_Version.Models.Player", b =>
                {
                    b.Navigation("GamePlayerOneNavigations");

                    b.Navigation("GamePlayerTwoNavigations");
                });
#pragma warning restore 612, 618
        }
    }
}
